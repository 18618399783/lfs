/**
*
*
*
*
*
**/

#ifndef _LFS_PROTOCOL_H_
#define _LFS_PROTOCOL_H_

#include <stdint.h>

#ifdef __cplusplus
extern "C"{
#endif

typedef union{
	struct{
		uint64_t body_len;
		uint8_t cmd;
		uint8_t state;
	}header_s;
	uint8_t header_bytes[10];
}protocol_header;

typedef enum{
	//0x01-0x0F
	PROTOCOL_CMD_DATASERVER_REGISTER = 0x01,
	PROTOCOL_CMD_DATASERVER_FULLSYNC = 0x02,
	PROTOCOL_CMD_DATASERVER_HEARTBEAT = 0x03,
	PROTOCOL_CMD_DATASERVER_SYNCREPORT = 0x04,
	PROTOCOL_CMD_DATASERVER_STATREPORT = 0x05,
	PROTOCOL_CMD_DATASERVER_QUITED = 0x0F,
	//0x10-0x30
	PROTOCOL_CMD_WRITE_TRACKER_REQ = 0x10,
	PROTOCOL_CMD_READ_TRACKER_REQ = 0x11,
	PROTOCOL_CMD_FILE_UPLOAD = 0x12,
	PROTOCOL_CMD_FILE_DOWNLOAD = 0x13,
	//0x31-0x35
	PROTOCOL_CMD_ASYNC_COPY_FILE = 0x31,
	//0x36-0x40
	PROTOCOL_CMD_FULL_SYNC_GET_MASTER_BINLOG_METE = 0x36,
	PROTOCOL_CMD_FULL_SYNC_COPY_MASTER_BINLOG = 0x37,
	PROTOCOL_CMD_FULL_SYNC_COPY_MASTER_DATA = 0x38,
	PROTOCOL_CMD_TEST = 0x99
}protocol_cmd;

typedef enum{
	//sys max error code 0x0F
	PROTOCOL_RESP_STATUS_SUCCESS = 0x00,
	PROTOCOL_RESP_STATUS_ERROR = 0x01,
	PROTOCOL_RESP_STATUS_ERROR_MEMORY = 0x02,
	PROTOCOL_RESP_STATUS_ERROR_PACKAGESIZE_OVERFLOW = 0x0B,
	PROTOCOL_RESP_STATUS_ERROR_NONEDATASEVERBLOCKS = 0x0C,
	PROTOCOL_RESP_STATUS_ERROR_NONEDATASEVERVOLUME = 0x0D,
	PROTOCOL_RESP_STATUS_ERROR_UNREGISTER = 0x0E,
	PROTOCOL_RESP_STATUS_SYNCSETTING_WAITING = 0x0F,
	//dio max error code 0x1A
	PROTOCOL_RESP_STATUS_ERROR_DIO_THREADS_POLLING = 0x10,
	PROTOCOL_RESP_STATUS_ERROR_DIO_WRITE_DISK = 0x11,
	// block max error code 0x20
	PROTOCOL_RESP_STATUS_ERROR_MOUNT_BLOCK_MAP_INFO = 0x1B,
	//binlog error code  0x30
	PROTOCOL_RESP_STATUS_ERROR_FILEMETEDATA_PACK = 0x21,
	PROTOCOL_RESP_STATUS_ERROR_FILEMETEDATA_UNPACK = 0x22,
	PROTOCOL_RESP_STATUS_ERROR_FILEID_INVALID = 0x23,
	PROTOCOL_RESP_STATUS_ERROR_FILE_SIZE_GET = 0x24,
	PROTOCOL_RESP_STATUS_ERROR_FILEDOWNLOAD_OFFSET_INVALID = 0x25,
	PROTOCOL_RESP_STATUS_ERROR_FILEDOWNLOAD_SIZE_INVALID = 0x26,
	PROTOCOL_RESP_STATUS_ERROR_FILE_DOWNLOAD_DIO = 0x27,
	PROTOCOL_RESP_STATUS_ERROR_BINLOG_WRITE = 0x30,
	//sync data 0x35
	PROTOCOL_RESP_STATUS_ERROR_SYNC_NO_BINLOGFILE = 0x35,
	PROTOCOL_RESP_STATUS_ERROR_SYNC_STAT_BINLOGFILE = 0x36,
	PROTOCOL_RESP_STATUS_ERROR_SYNC_NO_BINLOGTYPE = 0x37,
	PROTOCOL_RESP_STATUS_ERROR_SYNC_NO_DATAFILE = 0x38,
	PROTOCOL_RESP_STATUS_ERROR_SYNC_STAT_DATAFILE = 0x39,
	//tracker 0x40 
	PROTOCOL_RESP_STATUS_ERROR_NO_WRITE_DATASERVER = 0x40,
	PROTOCOL_RESP_STATUS_ERROR_NO_READ_DATASERVER = 0x41,

	PROTOCOL_RESP_STATUS_UNKONWN = 0x99
}protocol_resp_status;

#ifdef __cplusplus
}
#endif
#endif
